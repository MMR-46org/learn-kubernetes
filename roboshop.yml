apiVersion: v1
kind:  Pod
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  containers:
    - name: nginx
      image: madhanmohanreddyeeda/github-repo-frontend

---
apiVersion: v1
kind: Pod
metadata:
  name: catalogue
  labels:
    app: catalogue
spec:
  initContainers:
    - name: parameters-pull
      image: docker.io/madhanmohanreddyeeda/github-repo-parameter-store-init-container-image
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /parameters
          name: parameters
      env:
        - name: PARAMS
          value: "dev.roboshop.catalogue.MONGO_URL,MONGO_URL"
  containers:
    - name: catalogue
      image: madhanmohanreddyeeda/github-repo-catalogue
      volumeMounts:
      - mountPath: /parameters
        name: parameters
  volumes:
    - name: parameters
      emptyDir: {}


---
apiVersion: v1
kind: Pod
metadata:
  name: cart
  labels:
    app: cart
spec:
  containers:
    - name: cart
      image: madhanmohanreddyeeda/github-repo-cart

---
apiVersion: v1
kind: Pod
metadata:
  name: shipping
  labels:
    app: shipping
spec:
  containers:
    - name: shipping
      image: madhanmohanreddyeeda/github-repo-shipping

---
apiVersion: v1
kind: Pod
metadata:
  name: payment
  labels:
    app: payment
spec:
  containers:
    - name: payment
      image: madhanmohanreddyeeda/github-repo-payment

---
apiVersion: v1
kind: Pod
metadata:
  name: dispatch
  labels:
    app: dispatch
spec:
  containers:
    - name: dispatch
      image: madhanmohanreddyeeda/github-repo-dispatchk

---
apiVersion: v1
kind: Pod
metadata:
  name: user
  labels:
    app: user
spec:
  containers:
    - name: user
      image: madhanmohanreddyeeda/github-repo-user

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: catalogue
spec:
  selector:
    app: catalogue
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: user
spec:
  selector:
    app: user
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: cart
spec:
  selector:
    app: cart
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: shipping
spec:
  selector:
    app: shipping
  ports:
    -  protocol: TCP
       port: 80
       targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: payment
spec:
  selector:
    app: payment
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: dispatch
spec:
  selector:
    app: dispatch
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: frontend
spec:
    ingressClassName: nginx
    rules:
      - host: frontend-dev.madhanmohanreddy.tech
        http:
          paths:
            - pathType: Prefix
              backend:
                service:
                  name: frontend
                  port:
                    number: 80
              path: /


